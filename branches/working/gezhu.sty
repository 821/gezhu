%%      Gezhu Typesetting Macro or TeX/LaTeX
%%      (Gezhu: Splitted Annotation (warichu in Japanese))
%%      File:   gezhu.sty
%%      Author: Dian YIN (yindian@ustc)
%%      Descr:  This macro file provides an environment \withgezhu ...
%%              \endwithgezhu which which one can typeset gezhu by inserting
%%              double-line annotations using |{text}. There is no limitations
%%              in using whatever commands both in withgezhu environment and
%%              inside |{}, theoretically. The macro use \endgraf to end the
%%              current paragraph in order to determine the h-offset of the
%%              current position, so any parshapes will lose efficacy.
%%      Hist:   07.3.5.         Inspired by previous work (xguji) and thought.
%%              07.3.6-3.7.     Framework done. Buggy.
%%              07.3.10.        First release comes out. Works to my expectance.
%%              07.3.11.        Extra \parskip removed.
%%              07.3.25.        Improved balancing method to prevent overfull.
%%                              Fixed bug when \penalty\gezhu@breakpenalty
%%              07.5.13.        Added \beforegezhu and \aftergezhu
%%              07.9.28.        New works began. Adding new features. Use eTeX.
%%                              More comments written. Interline skips reserved.
%%                              Using parshape in order to avoid cjkglue.
%%              07.9.29.am      Finished rewriting codes until balancing module.
%%                              Fixed some bugs of nested loop.
%%              07.9.29.pm      More comments written. Finished the new
%%                              implementation. Changed \gezhu@breakpenalty to
%%                              -\@M. Fixed bug that adding \gezhu@strut isn't
%%                              enough for empty line compensation --- simply 
%%                              by adding \baselineskip instead of \gezhu@strut
%%                              Added \hfuzz and \hbadness to suppress warning.
%%              07.9.30.        Want to change \par in withgezhu environment.
%%                              New bug of unexcepted \parskip found.
%%              07.10.7.        Determined that the above bug is introduced by
%%                              CJKpunct. Removed \hyphenpenalty settings. Added
%%                              \parskip setting to avoid the bug.
%%              07.10.8.        Fixed bug of unwanted \penalty at end of para.
%%                              Changed \copy to \unhcopy when copying box.
%%                              Found a bug of punct-prohibitionless after 
%%                              a gezhu box, which seems hard to fix.
%%                              Added \gezhu@parfillskip setting. Better
%%                              width adjusting for balancing using bigem.
%%              07.10.9.        Added fbox for debug. Found a bug of two chars
%%                              appear at the end of line when the rest space
%%                              is between the width of 1 char and 2 chars,
%%                              which looks ugly. Fixed it by comparing the 
%%                              rest space with 2\gezhu@smallem and adjustment.
%%                              But not very ideal when punct-prohibition
%%                              is concerned. Okay for now.
%%                              Found a bug of not enough space left for a big
%%                              char to appear at the same line after gezhu.
%%      TODO:   1. Ship every paragraph to the outter vertical list when \par
%%                 is called, in order to save TeX's memory.
%%              2. Add a more friendly interface for use under LaTeX. e.g. 
%%                 \begin{withgezhu}[raise=-2pt,lines=2,everygezhu={\tiny}]
%%              3. Find bugs and fix...
%%      Note:   Chances are that the texts may exceed the right boundary 
%%              because of punctuation prohibitions.
\catcode`@=11
\ifx\gezhu@defined\@undefined
\ifx\eTeXrevision\@undefined
  \errmessge{eTeX required to use this package}
\fi
\def\gezhu@defined{\relax}
\newcount\gezhu@lines
\newcount\gezhu@breakpenalty
\newskip\gezhu@cjkglue
\newskip\gezhu@parfillskip
\newdimen\gezhu@gezhuraise
\newbox\gezhu@tmpbox
\newbox\gezhu@tmpboy
\newbox\gezhu@tmpboz
\newbox\gezhu@tmpb@x
\newbox\gezhu@tmpb@y
\newbox\gezhu@tmpb@z
\newbox\gezhu@tmpb@w
\newcount\gezhu@tmpcnt
\newdimen\gezhu@tmpdim
\newdimen\gezhu@tmpdil
\newdimen\gezhu@tmpskip
\newdimen\gezhu@bigem
\newdimen\gezhu@smallem
\newtoks\everywithgezhu
\newtoks\everygezhu
\newtoks\beforegezhu
\newtoks\aftergezhu
\newtoks\gezhu@strut
\gezhu@lines=2
\gezhu@cjkglue=0pt plus 0.1em minus 0.1em
\gezhu@gezhuraise=-2pt
\gezhu@parfillskip=0pt
\gezhu@breakpenalty=-\@M
\everywithgezhu={\gezhu@makespecials}
\ifdefined\LaTeX
  \everygezhu={\scriptsize}
\else
  \everygezhu={\fiverm\baselineskip=6pt}
\fi
\beforegezhu={\nobreak\hskip 0pt plus 0.1em minus 0.01em}
\aftergezhu={\hskip 0pt plus 0.1em minus 0.01em}
\gezhu@strut={\vphantom{()}}
\def\gezhu@debug#1{}
\def\gezhu@showbox#1{}
\def\gezhu@debugbox#1{\gezhu@fbox{#1}}
\def\gezhu@break{\gezhu@debug{Break}\penalty\gezhu@breakpenalty}
\def\gezhu@makehboxofhboxesandcount{%
  % input:  none but previous vertical mode nodes
  % output: \gezhu@tmpb@y as the result hbox, with interline skips
  %         \gezhu@tmpcnt as the result count
  % uses:   \gezhu@tmpb@z, \gezhu@tmpskip
  \setbox\gezhu@tmpb@y=\hbox{}%
  \gezhu@tmpcnt=0
  \loop
    \setbox\gezhu@tmpb@z=\lastbox
    \ifhbox\gezhu@tmpb@z
      \setbox\gezhu@tmpb@y=\hbox{\box\gezhu@tmpb@z\unhbox\gezhu@tmpb@y}%
      \advance\gezhu@tmpcnt by 1
      \ifnum\lastnodetype = 11%  inter line skip
        \gezhu@tmpskip=\lastskip
        \setbox\gezhu@tmpb@y=\hbox{\hskip\gezhu@tmpskip\unhbox\gezhu@tmpb@y}%
      \fi
      \unskip
      \unpenalty
  \repeat
}
\def\gezhu@getfirsthboxes#1{%
  % input:  #1 as the precomputed loop count
  %         \gezhu@tmpb@y as the hboxofhbox
  % output: \gezhu@tmpb@x as vbox of the first hboxes
  %         \gezhu@tmpb@y as vbox of the rest boxes without interlineskips
  % uses:   \gezhu@tmpb@x, \gezhu@tmpb@y, \gezhu@tmpcnt, \gezhu@tmpskip
  \hskip 111sp% manual boundary
  \unhbox\gezhu@tmpb@y
  \setbox\gezhu@tmpb@x=\copy\voidb@x% first boxes
  \setbox\gezhu@tmpb@y=\copy\voidb@x% last boxes
  \gezhu@tmpcnt=0
  \loop
    \ifnum #1>\gezhu@tmpcnt
      \ifnum\lastnodetype = 11%  inter line skip
        \unskip
      \fi
      \setbox\gezhu@tmpb@z=\lastbox
      \setbox\gezhu@tmpb@y=\vbox{\box\gezhu@tmpb@z\unvbox\gezhu@tmpb@y}%
      \advance\gezhu@tmpcnt by 1
  \repeat
  \ifnum\lastnodetype = 11%  skip
    \unless\ifdim\lastskip = 111sp % not boundary
      \unskip
    \fi
  \fi
  \loop
    \setbox\gezhu@tmpb@z=\lastbox
    \ifhbox\gezhu@tmpb@z
      \setbox\gezhu@tmpb@x=\vbox{\box\gezhu@tmpb@z\unvbox\gezhu@tmpb@x}%
      \ifnum\lastnodetype = 11%  skip
        \unless\ifdim\lastskip = 111sp % not boundary
          \gezhu@tmpskip=\lastskip
          \setbox\gezhu@tmpb@x=\vbox{\vskip\gezhu@tmpskip\unvbox\gezhu@tmpb@x}%
          \unskip
        \fi
      \fi
  \repeat
  \unskip% remove \hskip 111sp
}
\def\gezhu@removehboxes{%
  % input:  none but previous hbox nodes
  % output: \gezhu@tmpb@y as the result hbox
  %         \gezhu@tmpcnt as the result count
  % uses:   \gezhu@tmpb@z, \gezhu@tmpskip
  \setbox\gezhu@tmpb@z=\lastbox
  \ifhbox\gezhu@tmpb@z
    {\gezhu@removehboxes}% grouped for use local tmpb@z
    \unhbox\gezhu@tmpb@z
    \unskip % removes \rightskip
    \hskip\gezhu@cjkglue
  \fi
}
\def\gezhu@makeparshape#1{%
  % set parshape. First \gezhu@lines lines have length #1
  \begingroup % for local loop
  \xdef\gezhu@parshape{\number\numexpr\gezhu@lines+1}%
  \gezhu@tmpcnt=1
  \loop
    \xdef\gezhu@parshape{\gezhu@parshape\space 0pt \the#1}%
    \ifnum\gezhu@tmpcnt < \gezhu@lines
    \advance\gezhu@tmpcnt by 1
  \repeat
  \xdef\gezhu@parshape{\gezhu@parshape\space 0pt \the\maxdimen}%
  \endgroup
}
{
\catcode`|=\active
\gdef\gezhu@makespecials{%
  \catcode`|=\active
  \def|{\gezhu}%
}
}
\def\withgezhu{\begingroup
  \showboxbreadth=999
  \showboxdepth=999
  \hbadness=\@M\hfuzz=1em
  \def\gezhu##1{%
    \endgraf
    \setbox\gezhu@tmpbox=\lastbox
    \setbox\gezhu@tmpbox=\hbox{\unhbox\gezhu@tmpbox\unskip\unskip\unpenalty}%
    \unskip % remove interline skip in internal vertical mode
    \vskip -\parskip
    \noindent\gezhu@debug{Copy}\unhcopy\gezhu@tmpbox
    \the\beforegezhu
    \setbox\gezhu@tmpboy=\hbox{M}%
    \gezhu@bigem=\wd\gezhu@tmpboy
    \begingroup
    \let\gezhu=\relax
    \let\par\endgraf
    \the\everygezhu
    \setbox\gezhu@tmpboy=\hbox{M}%
    \gezhu@smallem=\wd\gezhu@tmpboy
    \gezhu@tmpdim=\hsize
    \advance\gezhu@tmpdim by -\wd\gezhu@tmpbox
    % now \gezhu@tmpdim is the width of the rest blank space of the line
    \ifdim\gezhu@tmpdim > 0.9\gezhu@smallem % annotations at the end of line
      \ifdim\gezhu@tmpdim > \gezhu@smallem
        \ifdim\gezhu@tmpdim < 2\gezhu@smallem
          \gezhu@tmpdim = 2\gezhu@smallem
        \fi
      \fi
      \gezhu@makeparshape{\gezhu@tmpdim}%
      % place gezhu annotation text in a vbox with specified parshape
      \setbox\gezhu@tmpboy=\vbox{\hsize=\gezhu@tmpdim
        \leftskip=0pt\rightskip=0pt
        \pretolerance=9999\tolerance=9999\parindent=0pt\hfuzz=3em
        \parskip=0pt
        \parshape\gezhu@parshape\relax
        ##1}%
      % extract the first \gezhu@lines lines and get the rest
      \setbox\gezhu@tmpboy=\vbox{%
        \unvbox\gezhu@tmpboy
        \gezhu@makehboxofhboxesandcount% output is \gezhu@tmpb@y
        \ifnum\gezhu@tmpcnt > \gezhu@lines
          \advance\gezhu@tmpcnt by -\gezhu@lines
        \fi
        \expandafter\gezhu@getfirsthboxes\expandafter{\the\gezhu@tmpcnt}%
        \global\setbox\gezhu@tmpb@x=\box\gezhu@tmpb@x
        \global\setbox\gezhu@tmpb@y=\box\gezhu@tmpb@y
      }%
      \ifdim\wd\gezhu@tmpb@x > 0pt
        \raise\gezhu@gezhuraise\hbox{\gezhu@debugbox{\box\gezhu@tmpb@x}}%
        \gezhu@break
      \fi
    \else % no annotations at the end of line
      \setbox\gezhu@tmpb@y=\vbox{\hsize=\maxdimen\hbox{##1}}%
      %\hskip 0pt plus 0.7em
      \gezhu@break
    \fi
    % now \gezhu@tmpb@y holds the remaining annotation text
    \loop
      \gezhu@makeparshape{\hsize}%
      % place gezhu annotation text in a vbox with specified parshape
      \setbox\gezhu@tmpboy=\vbox{%  the hsize is the main text hsize
        \leftskip=0pt\rightskip=0pt% plus 0.1em minus 0.1em%\gezhu@tmpdim
        \pretolerance=9999\tolerance=9999\parindent=0pt\hfuzz=3em
        \parskip=0pt
        \parshape\gezhu@parshape
        \unvbox\gezhu@tmpb@y
        \gezhu@removehboxes
        \unskip % remove last \gezhu@cjkglue
      }%
      % extract the first \gezhu@lines lines and get the rest
      \setbox\gezhu@tmpboy=\vbox{%
        \unvbox\gezhu@tmpboy
        \gezhu@makehboxofhboxesandcount% output is \gezhu@tmpb@y
        \ifnum\gezhu@tmpcnt > \gezhu@lines
          \advance\gezhu@tmpcnt by -\gezhu@lines
        \fi
        \global\gezhu@tmpcnt=\gezhu@tmpcnt
        \expandafter\gezhu@getfirsthboxes\expandafter{\the\gezhu@tmpcnt}%
        \global\setbox\gezhu@tmpb@x=\box\gezhu@tmpb@x
        \global\setbox\gezhu@tmpb@y=\box\gezhu@tmpb@y
      }%
      \ifdim\wd\gezhu@tmpb@x > 0pt% enough for construct a whole big line
        \setbox\gezhu@tmpbox=\hbox{\box\gezhu@tmpb@x}%
	\raise\gezhu@gezhuraise\hbox{\gezhu@debugbox{\box\gezhu@tmpbox}}%
        \gezhu@break
    \repeat
    % enter balancing module
    % \gezhu@tmpcnt is the number of lines in \gezhu@tmpb@y
    \ifhbox\gezhu@tmpb@y % no \gezhu@getfirsthboxes executed
      \expandafter\gezhu@getfirsthboxes\expandafter{\the\gezhu@tmpcnt}%
    \fi
    % now \gezhu@tmpb@y is vbox of hboxes without interlineskip
    % make \gezhu@tmpb@y hbox of hboxes without interlineskip
    \setbox\gezhu@tmpboy=\vbox{%
      \unvbox\gezhu@tmpb@y
      \gezhu@makehboxofhboxesandcount
      \global\gezhu@tmpcnt=\gezhu@tmpcnt
      \global\setbox\gezhu@tmpb@x=\box\gezhu@tmpb@x
      \global\setbox\gezhu@tmpb@y=\box\gezhu@tmpb@y
    }%
    % merge the inner hboxes, save the text in \gezhu@tmpbox
    \setbox\gezhu@tmpbox=\hbox{\unhbox\gezhu@tmpb@y\gezhu@removehboxes
      \unskip\unskip}% remove possible \parfillskip
    \gezhu@tmpdim=\wd\gezhu@tmpbox
    \divide\gezhu@tmpdim by \gezhu@lines
    % find best hsize for vbox
    \loop
      \setbox\gezhu@tmpboy=\vbox{\hsize=\gezhu@tmpdim
        \leftskip=0pt\rightskip=0pt% plus 0.1em minus 0.1em%\gezhu@tmpdim
        \pretolerance=9999\tolerance=9999\parindent=0pt\hfuzz=3em
        \parskip=0pt
        \parfillskip=\gezhu@parfillskip
        \unhcopy\gezhu@tmpbox
      }%
      \setbox\gezhu@tmpboy=\vbox{%
        \unvbox\gezhu@tmpboy
        \gezhu@makehboxofhboxesandcount
        \global\gezhu@tmpcnt=\gezhu@tmpcnt
        \global\setbox\gezhu@tmpb@x=\box\gezhu@tmpb@x
        \global\setbox\gezhu@tmpb@y=\box\gezhu@tmpb@y
      }%
      \ifnum\gezhu@tmpcnt > \gezhu@lines
        \advance\gezhu@tmpdim by 0.1\gezhu@bigem
    \repeat
    % now \gezhu@tmpdim is the almost optimal hsize for vbox
    % now find the longest line width when break with hsize=\gezhu@tmpdim
    \gezhu@tmpdil=\gezhu@tmpdim
    \setbox\gezhu@tmpboy=\vbox{%
      \hskip 0pt
      \unhbox\gezhu@tmpb@y
      \loop
        \ifnum\lastnodetype = 11%  inter line skip
          \unskip
        \fi
        \setbox\gezhu@tmpb@x=\lastbox
        \ifhbox\gezhu@tmpb@x
          %\showbox\gezhu@tmpb@x
          \setbox\gezhu@tmpb@x=\hbox{\unhbox\gezhu@tmpb@x}%
          %\showbox\gezhu@tmpb@x
          \ifdim\gezhu@tmpdil < \wd\gezhu@tmpb@x
            \global\gezhu@tmpdil=\wd\gezhu@tmpb@x
          \fi
      \repeat
      \unskip
    }%
    % now \gezhu@tmpdil is the length of the longest line
    % the following lines tries to find a better hsize
    \advance\gezhu@tmpdil by -\gezhu@tmpdim
    \ifdim\gezhu@tmpdil > 0.45\gezhu@bigem
      \advance\gezhu@tmpdim by \gezhu@tmpdil
    \fi
    \ifdim\gezhu@tmpdim > \hsize
      \gezhu@tmpdim=\hsize
    \fi
    %\gezhu@tmpdil=\hsize
    %\advance\gezhu@tmpdil by -\gezhu@tmpdim
    %\ifdim\gezhu@tmpdil < \gezhu@bigem
    %  \gezhu@tmpdim=\hsize
    %\fi
    %%%%
    \setbox\gezhu@tmpboy=\vbox{\hsize=\gezhu@tmpdim
      \leftskip=0pt\rightskip=0pt% plus 0.1em minus 0.1em%\gezhu@tmpdim
      \pretolerance=9999\tolerance=9999\parindent=0pt\hfuzz=3em
      \parskip=0pt
      \parfillskip=\gezhu@parfillskip
      \unhcopy\gezhu@tmpbox
    }%
    \setbox\gezhu@tmpboy=\vbox{%
      \unvbox\gezhu@tmpboy
      \gezhu@makehboxofhboxesandcount
      \global\gezhu@tmpcnt=\gezhu@tmpcnt
      \global\setbox\gezhu@tmpb@y=\box\gezhu@tmpb@y
    }%
    % now \gezhu@tmpb@y is the hbox of hboxes with interlineskip
    % next, compensate for empty lines
    {\gezhu@getfirsthboxes{0}\global\setbox\gezhu@tmpb@x=\box\gezhu@tmpb@x}%
    \loop
      \ifnum\gezhu@tmpcnt < \gezhu@lines
        \advance\gezhu@tmpcnt by 1
        %\setbox\gezhu@tmpb@y=\hbox{\unhbox\gezhu@tmpb@y\hbox{\the\gezhu@strut}}%
        \setbox\gezhu@tmpb@x=\vbox{\unvbox\gezhu@tmpb@x\vskip\baselineskip}%
    \repeat
    \raise\gezhu@gezhuraise\hbox{\gezhu@debugbox{\box\gezhu@tmpb@x}}%
    \endgroup
    \the\aftergezhu
  }%
  \let\gezhu@oldpar\par
  \def\par{\unpenalty\unskip\unpenalty\unskip\unpenalty\gezhu@oldpar
    %\egroup
    %\unvbox\gezhu@tmpbox\leavevmode\endgraf\setbox\gezhu@tmpbox=\vbox\bgroup
    }%
  \the\everywithgezhu
  \setbox\gezhu@tmpbox=\vbox\bgroup
}
\def\endwithgezhu{\egroup\gezhu@showbox\gezhu@tmpbox\unvbox\gezhu@tmpbox\endgroup}
% fbox
\newbox\gezhu@fbox@tmpbox
\newdimen\gezhu@fbox@linewidth
\newdimen\gezhu@fbox@tmpdim
\gezhu@fbox@linewidth=0.4pt
\long\def\gezhu@fbox#1{%
  \setbox\gezhu@fbox@tmpbox=\hbox{#1}%
  \gezhu@fbox@tmpdim=2\gezhu@fbox@linewidth
  \advance\gezhu@fbox@tmpdim\wd\gezhu@fbox@tmpbox
  \leavevmode\hbox{\hskip-\gezhu@fbox@linewidth\vbox{\hrule height \gezhu@fbox@linewidth width \gezhu@fbox@tmpdim
  \hbox{\vrule width \gezhu@fbox@linewidth height \ht\gezhu@fbox@tmpbox
  \unhcopy\gezhu@fbox@tmpbox\vrule width \gezhu@fbox@linewidth height \ht\gezhu@fbox@tmpbox}%
  \hrule height \gezhu@fbox@linewidth width \gezhu@fbox@tmpdim
  }\hskip-\gezhu@fbox@linewidth}%
}
\fi
